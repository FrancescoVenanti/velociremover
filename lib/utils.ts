import { clsx, type ClassValue } from "clsx";
import { twMerge } from "tailwind-merge";

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}

export const charMap: Record<string, string> = {
  // Spaces
  "\u00A0": " ",
  "\u1680": " ",
  "\u2000": " ",
  "\u2001": " ",
  "\u2002": " ",
  "\u2003": " ",
  "\u2004": " ",
  "\u2005": " ",
  "\u2006": " ",
  "\u2007": " ",
  "\u2008": " ",
  "\u2009": " ",
  "\u200A": " ",
  "\u202F": " ",
  "\u205F": " ",
  "\u3000": " ",

  // Dashes
  "\u2012": "-",
  "\u2013": "-",
  "\u2014": "-",
  "\u2015": "-",
  "\u2212": "-",

  // Quotes & Apostrophes
  "\u2018": "'",
  "\u2019": "'",
  "\u201A": "'",
  "\u201B": "'",
  "\u201C": '"',
  "\u201D": '"',
  "\u201E": '"',
  "\u201F": '"',
  "\u2032": "'",
  "\u2033": '"',
  "\u2034": '"',
  "\u00AB": '"',
  "\u00BB": '"',

  // Ellipsis & Misc
  "\u2026": "...",
  "\u2022": "*",
  "\u00B7": "*",

  // Full-width punctuation
  "\uFF01": "!",
  "\uFF02": '"',
  "\uFF03": "#",
  "\uFF04": "$",
  "\uFF05": "%",
  "\uFF06": "&",
  "\uFF07": "'",
  "\uFF08": "(",
  "\uFF09": ")",
  "\uFF0A": "*",
  "\uFF0B": "+",
  "\uFF0C": ",",
  "\uFF0D": "-",
  "\uFF0E": ".",
  "\uFF0F": "/",
  "\uFF1A": ":",
  "\uFF1B": ";",
  "\uFF1C": "<",
  "\uFF1D": "=",
  "\uFF1E": ">",
  "\uFF1F": "?",
  "\uFF20": "@",
  "\uFF3B": "[",
  "\uFF3C": "\\",
  "\uFF3D": "]",
  "\uFF3E": "^",
  "\uFF3F": "_",
  "\uFF40": "`",
  "\uFF5B": "{",
  "\uFF5C": "|",
  "\uFF5D": "}",
  "\uFF5E": "~",
};

export const removeSet = new Set([
  "\u00AD",
  "\u180E",
  "\u200B",
  "\u200C",
  "\u200D",
  "\u200E",
  "\u200F",
  "\u202A",
  "\u202B",
  "\u202C",
  "\u202D",
  "\u202E",
  "\u2060",
  "\u2061",
  "\u2062",
  "\u2063",
  "\u2064",
  "\u2065",
  "\u2066",
  "\u2067",
  "\u2068",
  "\u2069",
  "\u206A",
  "\u206B",
  "\u206C",
  "\u206D",
  "\u206E",
  "\u206F",
  "\uFE00",
  "\uFE01",
  "\uFE02",
  "\uFE03",
  "\uFE04",
  "\uFE05",
  "\uFE06",
  "\uFE07",
  "\uFE08",
  "\uFE09",
  "\uFE0A",
  "\uFE0B",
  "\uFE0C",
  "\uFE0D",
  "\uFE0E",
  "\uFE0F",
  "\uFEFF",
]);
